swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
- name: "pet"
  description: "Everything about your Pets"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "store"
  description: "Access to Petstore orders"
- name: "user"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /dog:
    post:
      tags:
      - "dog"
      summary: "Add a new dog to the store"
      description: ""
      operationId: "addDog"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Dog object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Dog"
      responses:
        400:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/ApiResponse"
      security:
      - petstore_auth:
        - "write:dogs"
        - "read:dogs"
  /dog/{dogId}:
    get:
      tags:
      - "dog"
      summary: "Find dog by ID"
      description: "Returns a single dog"
      operationId: "getDogById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "dogId"
        in: "path"
        description: "ID of dog to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Dog"
        400:
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ApiResponse"
        404:
          description: "Dog not found"
      security:
      - api_key: []
    post:
      tags:
      - "dog"
      summary: "Updates a dog in the store with form data"
      description: ""
      operationId: "updateDogWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "dogId"
        in: "path"
        description: "ID of dog that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "name"
        in: "formData"
        description: "Updated name of the dog"
        required: false
        type: "string"
      - name: "age"
        in: "formData"
        description: "Updated age of the dog"
        required: false
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/ApiResponse"
      security:
      - petstore_auth:
        - "write:dogs"
        - "read:dogs"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:dogs: "modify pets in your account"
      read:dogs: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Dog:
    type: "object"
    required:
    - "name"
    - "age"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "doggie"
      age:
        type: "integer"
        description: "dog age"
        format: "int32"
    xml:
      name: "Dog"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"